name: "SolarLapse"

on:
  workflow_dispatch:
    inputs:
      date:
        description: "Date in 'YYYY/MM/DD' format for which the SolarLapse is to be created."
        required: false

permissions:
  contents: "write"
  packages: "read"
  actions: "write" # See: https://github.com/orgs/community/discussions/25702#discussioncomment-8741412

jobs:
  solarlapse:
    runs-on: "ubuntu-latest"
    
    steps:
      - name: "Checkout Repository"
        uses: "actions/checkout@v4"

      - name: "Login GitHub Container Registry (GHCR)"
        uses: "docker/login-action@v3.0.0"
        with:
          registry: "ghcr.io"
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: "Create Download Date"
        shell: "bash"
        run: |
          download_date="${{ inputs.date }}"
          if [ -z "$download_date" ]; then
            # The satellite images from the previous day (i.e. midnight) are not 
            # immediately available. The workflow for the previous day is 
            # therefore triggered a few hours later on the next day.
            download_date=$(date -d "yesterday" +"%Y/%m/%d")
          fi

          echo "DOWNLOAD_DATE=$download_date" >> $GITHUB_ENV
          
      - name: "Execute SolarLapse"
        shell: "bash"
        run: |
          docker run \
            --rm \
            --volume $PWD:/mnt/local \
            ghcr.io/plutonomy-de/solarlapse \
            --date "$DOWNLOAD_DATE" > stdout.txt

      - name: "Create 'metadata.json'"
        id: "metadata"
        shell: "bash"
        run: |
          # Replace slashes with dashes
          date=$(echo "$DOWNLOAD_DATE" | sed 's/\//-/g')
          
          # Create description
          description="
          This video presents a time-lapse sequence of daily solar activity. The images used for the time-lapse sequence were captured by the Solar Dynamics Observatory (SDO). 
          As the original images are only available in greyscale, they were recoloured using a Color Lookup Table (CLUT) to enhance the visibility of prominences and fillaments 
          in the photosphere.
  
          Date: $date
  
          Editor: Stefan Kühnel
          Music: Vital Whales by Unicorn Heads
          Imagery: Courtesy of NASA/SDO and the AIA, EVE, and HMI science teams.
          "

          # Convert multiline string to single line string
          # See: https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html
          description="${description@Q}"

          # Manually remove $'…' quoting mechanism
          # See: https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html
          description="${description/#$\'\\n}"
          description="${description/%\\n\'}"

          cat <<EOL > metadata.json
            {
              "title": "Daily Time Lapse of the Sun – $date",
              "description": "$description",
              "tags": [
                "solarlapse", 
                "solar lapse", 
                "solar timelapse", 
                "sun timelapse", 
                "timelapse",
                "daily timelapse of the sun"
              ],
              "privacyStatus": "public",
              "madeForKids": false,
              "embeddable": true,
              "publicStatsViewable": true,
              "categoryId": "28",
              "recordingdate": "$date",
              "language": "en"
            }
          EOL

          echo "json=$(cat metadata.json | jq -c . )" >> "$GITHUB_OUTPUT"
          
      - name: "Create 'release_notes.txt'"
        shell: "bash"
        run: |
          cat <<EOL > release_notes.txt
          ## Daily Time Lapse of the Sun – ${{ fromJson(steps.metadata.outputs.json).recordingdate }}

          ${{ fromJson(steps.metadata.outputs.json).description }}
          EOL

      - name: "Delete Previous SolarLapse"
        continue-on-error: true
        shell: "bash"
        run: gh release delete ${{ fromJson(steps.metadata.outputs.json).recordingdate }} --cleanup-tag --yes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: "Release SolarLapse"
        shell: "bash"
        run: |
          gh release create ${{ fromJson(steps.metadata.outputs.json).recordingdate }} \
            --title "SolarLapse – ${{ fromJson(steps.metadata.outputs.json).recordingdate }}" \
            --notes-file release_notes.txt \
            solarlapse.mp4 \
            metadata.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Enqueue for Publication in Firebase Real-Time Database"
        shell: "bash"
        run: "gh workflow run firebase-rtdb-enqueue.yml"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}